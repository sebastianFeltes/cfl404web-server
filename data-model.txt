{
  "data": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Modelos de configuraci√≥n\nmodel Role {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique @db.VarChar(64)\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  users User[]\n\n  @@map(\"roles\")\n}\n\nmodel Status {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique @db.VarChar(64)\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  users         User[]\n  students      Student[]\n  courses       Course[]\n  courseStudents CourseStudent[]\n  staff         Staff[]\n\n  @@map(\"statuses\")\n}\n\nmodel Day {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique @db.VarChar(64)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  courseDays CourseDay[]\n\n  @@map(\"days\")\n}\n\nmodel Shift {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique @db.VarChar(64)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  courseDays CourseDay[]\n\n  @@map(\"shifts\")\n}\n\nmodel Classroom {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique @db.VarChar(64)\n  capacity  Int\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  courseDays CourseDay[]\n\n  @@map(\"classrooms\")\n}\n\nmodel AttendanceCode {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique @db.VarChar(64)\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  attendances Attendance[]\n\n  @@map(\"attendance_codes\")\n}\n\n// Modelos principales\nmodel User {\n  id        Int      @id @default(autoincrement())\n  username  String   @unique @db.VarChar(32)\n  firstName String   @db.VarChar(64) @map(\"first_name\")\n  lastName  String   @db.VarChar(64) @map(\"last_name\")\n  googleId  String?  @db.VarChar(64) @map(\"google_id\")\n  photoUrl  String?  @db.VarChar(255) @map(\"photo_url\")\n  email     String   @unique @db.VarChar(64)\n  password  String   @db.VarChar(255)\n  roleId    Int      @map(\"role_id\")\n  statusId  Int      @map(\"status_id\")\n  description String? @db.VarChar(255)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  role      Role     @relation(fields: [roleId], references: [id])\n  status    Status   @relation(fields: [statusId], references: [id])\n  sessions  Session[]\n  inscriptions Inscription[]\n  students  Student[]\n  staff     Staff?\n  logs      Log[]\n\n  @@map(\"users\")\n}\n\nmodel Session {\n  id           Int      @id @default(autoincrement())\n  userId       Int      @map(\"user_id\")\n  ip           String   @db.VarChar(64)\n  sessionToken String   @unique @db.VarChar(255) @map(\"session_token\")\n  expiresAt    DateTime @map(\"expires_at\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel Inscription {\n  id        Int      @id @default(autoincrement())\n  userId    Int      @map(\"user_id\")\n  courseId  Int      @map(\"course_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, courseId])\n  @@map(\"inscriptions\")\n}\n\nmodel Student {\n  id            Int      @id @default(autoincrement())\n  firstName     String   @db.VarChar(64) @map(\"first_name\")\n  lastName      String   @db.VarChar(64) @map(\"last_name\")\n  dni           Int      @unique\n  userId        Int      @map(\"user_id\")\n  statusId      Int      @map(\"status_id\")\n  recordNumber  String?   @db.VarChar(64) @map(\"record_number\")\n  photoUrl      String?  @db.VarChar(255) @map(\"photo_url\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  status         Status          @relation(fields: [statusId], references: [id])\n  studentDetail  StudentDetail?\n  courseStudents CourseStudent[]\n\n  @@map(\"students\")\n}\n\nmodel StudentDetail {\n  id              Int      @id @default(autoincrement())\n  studentId       Int      @unique @map(\"student_id\")\n  phone           String?  @db.VarChar(64)\n  address         String?  @db.VarChar(128)\n  email           String?  @db.VarChar(64)\n  dob             DateTime?\n  extraPhone      String?  @db.VarChar(64) @map(\"extra_phone\")\n  extraEmail      String?  @db.VarChar(64) @map(\"extra_email\")\n  dniCopy         Boolean  @default(false) @map(\"dni_copy\")\n  schoolFileCopy  Boolean  @default(false) @map(\"school_file_copy\")\n  inscriptionForm Boolean  @default(false) @map(\"inscription_form\")\n  description     String?  @db.VarChar(255)\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)\n\n  @@map(\"student_details\")\n}\n\nmodel Staff {\n  id           Int      @id @default(autoincrement())\n  userId       Int      @unique @map(\"user_id\")\n  firstName    String   @db.VarChar(64) @map(\"first_name\")\n  lastName     String   @db.VarChar(64) @map(\"last_name\")\n  dni          Int      @unique\n  recordNumber String?   @db.VarChar(64) @map(\"record_number\")\n  statusId     Int      @map(\"status_id\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  status        Status        @relation(fields: [statusId], references: [id])\n  staffDetail   StaffDetail?\n  courses       Course[]\n\n  @@map(\"staff\")\n}\n\nmodel StaffDetail {\n  id            Int      @id @default(autoincrement())\n  staffId       Int      @unique @map(\"staff_id\")\n  phone         String?  @db.VarChar(64)\n  address       String?  @db.VarChar(128)\n  email         String?  @db.VarChar(64)\n  dob           DateTime?\n  admissionDate DateTime? @map(\"admission_date\")\n  photoUrl      String?  @db.VarChar(255) @map(\"photo_url\")\n  description   String?  @db.VarChar(255)\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  staff Staff @relation(fields: [staffId], references: [id], onDelete: Cascade)\n\n  @@map(\"staff_details\")\n}\n\nmodel Course {\n  id                  Int      @id @default(autoincrement())\n  name                String   @unique @db.VarChar(64)\n  staffId             Int      @map(\"staff_id\")\n  startDate           DateTime? @map(\"start_date\")\n  endDate             DateTime? @map(\"end_date\")\n  innasistanceAllowed Int?      @map(\"innasistance_allowed\")\n  lectiveYear         Int      @map(\"lective_year\")\n  teachingHours       Int?      @map(\"teaching_hours\")\n  totalDays           Int?      @map(\"total_days\")\n  totalClasses        Int?      @map(\"total_classes\")\n  statusId            Int      @map(\"status_id\")\n  description         String?  @db.VarChar(255)\n  createdAt           DateTime @default(now()) @map(\"created_at\")\n  updatedAt           DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  staff          Staff           @relation(fields: [staffId], references: [id])\n  status         Status          @relation(fields: [statusId], references: [id])\n  courseDays     CourseDay[]\n  courseStudents CourseStudent[]\n  inscriptions   Inscription[]\n\n  @@map(\"courses\")\n}\n\nmodel CourseDay {\n  id          Int      @id @default(autoincrement())\n  courseId    Int      @map(\"course_id\")\n  dayId       Int      @map(\"day_id\")\n  classroomId Int      @map(\"classroom_id\")\n  shiftId     Int      @map(\"shift_id\")\n  startTime   DateTime @map(\"start_time\")\n  endTime     DateTime @map(\"end_time\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  course    Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  day       Day       @relation(fields: [dayId], references: [id])\n  classroom Classroom @relation(fields: [classroomId], references: [id])\n  shift     Shift     @relation(fields: [shiftId], references: [id])\n\n  @@unique([courseId, dayId])\n  @@map(\"course_days\")\n}\n\nmodel CourseStudent {\n  id         Int      @id @default(autoincrement())\n  courseId   Int      @map(\"course_id\")\n  studentId  Int      @map(\"student_id\")\n  statusId   Int      @map(\"status_id\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  course     Course      @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  student    Student     @relation(fields: [studentId], references: [id], onDelete: Cascade)\n  status     Status      @relation(fields: [statusId], references: [id])\n  attendances Attendance[]\n\n  @@unique([courseId, studentId])\n  @@map(\"course_students\")\n}\n\nmodel Attendance {\n  id               Int      @id @default(autoincrement())\n  courseStudentId  Int      @map(\"course_student_id\")\n  codeId           Int      @map(\"code_id\")\n  hour             DateTime\n  date             DateTime\n  createdAt        DateTime @default(now()) @map(\"created_at\")\n  updatedAt        DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  courseStudent CourseStudent @relation(fields: [courseStudentId], references: [id], onDelete: Cascade)\n  code          AttendanceCode @relation(fields: [codeId], references: [id])\n\n  @@map(\"attendances\")\n}\n\nmodel Log {\n  id        Int      @id @default(autoincrement())\n  userId    Int      @map(\"user_id\")\n  tableName String   @db.VarChar(64) @map(\"table_name\")\n  action    String   @db.VarChar(64)\n  recordId  Int      @map(\"record_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relaciones\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"logs\")\n}\n\n"
}